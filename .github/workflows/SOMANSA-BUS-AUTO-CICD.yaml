name: SOMANSA-BUS-AUTO-CICD

on:
  push:
    branches:
      - main
      - test
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Create application.yml from secret
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_YML }}" > src/main/resources/application.yml

      - name: Create application-prod.yml from secret
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_PROD_YML }}" > src/main/resources/application-prod.yml

      - name: Build with Gradle
        run: ./gradlew clean build -x test -Dspring.profiles.active=prod

      - name: Docker setup
        uses: docker/setup-buildx-action@v3

      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/somansa-bus-auto:${{ github.ref_name }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/somansa-bus-auto:cache
          cache-to: type=inline

  deploy:
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Determine Environment Variables
        id: env
        run: |
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            echo "CONTAINER_NAME=somansa-bus-auto-back" >> $GITHUB_ENV
            echo "PORT=8091" >> $GITHUB_ENV
          elif [[ "${{ github.ref_name }}" == "test" ]]; then
            echo "CONTAINER_NAME=somansa-bus-auto-back-test" >> $GITHUB_ENV
            echo "PORT=8092" >> $GITHUB_ENV
          fi

      - name: Deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 2022
          script: |
            set -e

            echo "환경 변수 설정 중..."
            export PATH=$PATH:/usr/local/bin
            export PW=${{ secrets.SERVER_PASSWORD }}

            echo "컨테이너 이름: $CONTAINER_NAME, 포트: $PORT"

            echo "도커 이미지 풀: ${{ secrets.DOCKERHUB_USERNAME }}/somansa-bus-auto:${{ github.ref_name }}"
            echo $PW | sudo -S docker pull ${{ secrets.DOCKERHUB_USERNAME }}/somansa-bus-auto:${{ github.ref_name }}

            echo "기존 컨테이너 중지 및 삭제 중..."
            if sudo docker ps -a --format '{{.Names}}' | grep -Eq "^${CONTAINER_NAME}$"; then
              echo "기존 컨테이너 $CONTAINER_NAME 존재, 중지 및 삭제 중..."
              echo $PW | sudo -S docker rm -f $CONTAINER_NAME
            else
              echo "기존 컨테이너 없음"
            fi

            echo "새로운 컨테이너 $CONTAINER_NAME 실행 중..."
            echo $PW | sudo -S docker run -d -p ${PORT}:8080 --name $CONTAINER_NAME \
              -e TZ=Asia/Seoul \
              -e SPRING_PROFILES_ACTIVE=prod \
              -v /etc/localtime:/etc/localtime:ro \
              -v /volume1/projects/suh-project-utility:/mnt/suh-project-utility \
              ${{ secrets.DOCKERHUB_USERNAME }}/somansa-bus-auto:${{ github.ref_name }}

            echo "배포가 성공적으로 완료되었습니다."
